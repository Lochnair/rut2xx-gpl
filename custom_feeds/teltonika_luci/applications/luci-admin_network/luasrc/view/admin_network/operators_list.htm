<%#
LuCI - Lua Configuration Interface
Copyright 2010 Jo-Philipp Wich <xm@subsignal.org>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: diagnostics.htm 6770 2011-01-20 12:49:42Z jow $

-%>
<%
local uci = require "luci.model.uci".cursor()
local sys = require "luci.sys"

local operator = luci.util.trim(luci.sys.exec("gsmctl -o")) or "N/A"
if operator == "" then
	operator = "N/A"
elseif operator == "gsmctl.c: error parsing output" then
	operator = "N/A"
elseif operator == "gsmctl error: parsing output" then
	operator = "N/A"
elseif operator == "gsmctl error: sim failure" then
	operator = "N/A"
end

local mode = uci:get("simcard", "sim1", "mode")
local numeric = uci:get("simcard", "sim1", "numeric")
local interval = uci:get("simcard", "sim1", "reconnect")

%>
<%+header%>

<script type="text/javascript" src="<%=resource%>/cbi.js"></script>
<script type="text/javascript">
	var wait_intv;
	var interval;

	function hide_element(value) {
		var manual = document.getElementById("manual_con")
		var auto = document.getElementById("auto_con")
		var num = document.getElementById("num_operator").value

		if (value == "auto") {
			auto.style.display = "inline"
			manual.style.display = "none"
		} else {
			auto.style.display = "none"
			manual.style.display = "inline"
			if (!num) {
				document.getElementById("num_operator").value = "<%=numeric %>"
			}
		}
	}

	function update_reconnect_interval() {
		var e = document.getElementById("cbid.operctl.general.rescan")
		var value = e.options[e.selectedIndex].value
		var url = 
			'<%=luci.dispatcher.build_url("admin", "status", "reconnect_interval")%>'

		XHR.get(url, { interval: value }, function() {})
	}

	function select_operator() {
		update_reconnect_interval()

		var connect = document.getElementById('applyConnection')
		var status = document.getElementById('cbi-apply-system-status')
		var me = document.getElementById("message");
		var e = document.getElementById("connection_mode");
		var mode = e.options[e.selectedIndex].text
		var e = document.getElementById("curoper");
		var url = '<%=luci.dispatcher.build_url("admin", "status", "auto_select")%>'
		var rsp = '<%=luci.dispatcher.build_url("admin", "status", "connect_rsp")%>'
		var param = null

		me.innerHTML = ''
		if (connect) {
			connect.style.display = "inline"
		}

		if (mode.includes("Manual")) {
			var value = document.getElementById('num_operator')

			if (!value.value) {
				alert("<%=translate('Operator code field is empty!')%>")
				return
			}

			url = '<%=luci.dispatcher.build_url("admin", "status", "connect_network")%>'
			param = { numeric: value.value, mode: mode }
		}

		disable_pointer_events()

		XHR.get(url, param, function() {
			if (wait_intv) {
				clearInterval(wait_intv)
			}

			if (!mode.includes("Manual")) {
				document.getElementById('num_operator').value = ''
			}

			wait_intv = setInterval(function() {
				XHR.get(rsp, param, function(x, data) {
					if (!data || data == "running") {
						return
					}

					clearInterval(wait_intv)

					if (data.match("^(registered)")) {
						<%operator = luci.util.trim(luci.sys.exec("gsmctl -o")) or "N/A"
						if operator == "" then
							operator = "N/A"
						elseif operator == "gsmctl.c: error parsing output" then
							operator = "N/A"
						elseif operator == "gsmctl error: parsing output" then
							operator = "N/A"
						elseif operator == "gsmctl error: sim failure" then
							operator = "N/A"
						end%>

						e.innerHTML = '<%=operator%>'
						if (!mode.includes("Manual")) {
							me.innerHTML =
								'<div id="succ_message" class="alert-message success">' + 
									'<%=translate("Registered")%>' +
								'</div>'
						} else {
							if (data.includes("automatic")) {
								me.innerHTML = 
									'<div id="succ_message" class="alert-message success">' +
										'<%=translate("Registration to selected operator failed, registered to automatic")%>' +
									'</div>'
							} else {
								me.innerHTML = 
									'<div id="succ_message" class="alert-message success">' +
										'<%=translate("Registered to selected operator")%>' +
									'</div>'
							}
						}
					} else if (data == "not supported") {
						me.innerHTML = 
							'<div id="err_message" class="alert-message error">' +
								'<%=translate("Currently not supported by module")%>' +
							'</div>'
					} else if (data == "unregistered" || data == "denied") {
						e.innerHTML = 'N/A'
						if (mode.includes('Manual')) {
							me.innerHTML = 
								'<div id="err_message" class="alert-message error" >' +
									'<%=translate("Can\\\'t register to selected operator")%>' +
								'</div>'
						} else {
							me.innerHTML = 
								'<div id="err_message" class="alert-message error" >' +
									'<%=translate("Can\\\'t find a valid operator")%>' + 
								'</div>'
						}
					} else if (data == "gsmd not running") {
						me.innterHTML = 
							'<div id="err_message" class="alert-message error" >' +
								'<%=translate("Gsmd not running")%>' +
							'</div>'
					} else if (data == "Timeout.") {
						me.innerHTML = 
							'<div id ="err_message" class="alert-message error">' +
								'<%=translate("Timeout")%>' +
							'</div>'
					} else if (data == "NAN") {
						me.innerHTML = 
							'<div id="err_message" class="alert-message error">' +
								'<%=translate("Operator number can only contain digits!")%>' +
							'</div>'
					} else {
						me.innerHTML = 
							'<div id="err_message" class="alert-message error" >' +
								'<%=translate("Unknown message returned")%>' +
							'</div>'
					}

					connect.style.display = "none"
					enable_pointer_events()
				})
			}.bind(this), 4000)
		})
	}

	function disable_pointer_events() {
		document.getElementById("selection-form").style.pointerEvents = "none"
	}

	function enable_pointer_events() {
		document.getElementById("selection-form").style.pointerEvents = "auto"
	}

	function periodic_get(action) {
		if (action == "start") {
			document.getElementById("message").innerHTML = ''
			var msg = "<%=translate('You will lose current mobile connection. Are you sure you want to scan for operators?')%>"
			
			if (confirm(msg)) {
				if (interval) {
					clearInterval(interval)
				}

				document.getElementById("scanBtn").disabled = true
				document.getElementById("scanBtn").style = 
					"font-weight: normal; margin-right: 20px; color: #B8B8B8; " + 
					"cursor: default;"
				document.getElementById("selectBtn").disabled = true
				document.getElementById("selectBtn").style = 
					"cursor: default; color: #B8B8B8; "

				var output = document.getElementById('diag-rc-output')
				if (output) {
					output.innerHTML =
						'<img src="<%=resource%>/icons/loading.gif" alt="<%:Loading%>" ' +
							'style="vertical-align:middle" /> ' +
						'<%:Collecting data...%>'
				}

				start_dmn()
				document.getElementById("curoper").innerHTML = 'N/A'
				setTimeout(function(){ operators_get() }, 2000)
				interval = setInterval(operators_get, 10000)
			}
		} else if (action == "stop") {
			clearInterval(interval)		
			document.getElementById("scanBtn").disabled = false
			document.getElementById("scanBtn").style = 
				"font-weight: normal; margin-right: 20px; cursor: pointer;"
			document.getElementById("selectBtn").disabled = false
			document.getElementById("selectBtn").style = "cursor: pointer; "
		}
	}

	function start_dmn() {
		XHR.get(
			'<%=luci.dispatcher.build_url("admin", "status", "start_dmn")%>', 
				null, function(x) { }
		)
	}

	function operators_get() {
		var legend = document.getElementById('diag-rc-legend')
		var output = document.getElementById('diag-rc-output')

		if (!(legend && output)) {
			return
		}

		legend.parentNode.style.display = 'block'
		var url = '<%=luci.dispatcher.build_url("admin", "status", "operators")%>'

		XHR.get(url, null, function(x, data) {
			var status = ["Unknown", "Available", "Available", "Forbidden"]
			var net_ac_type = ["2G", "2G", "3G", "2G", "3G", "3G", "3G", "4G"]
			var position = 1
				
			if (data == "timeout") {
				periodic_get("stop")
				data = null
				legend.style.display = 'none'
				output.innerHTML = 
					'<span class="error">' +
						'<%=translate("Request time out!")%>' +
					'</span>'
			} else if (data == "error") {
				periodic_get("stop")
				legend.style.display = 'none'
				output.innerHTML = 
					'<span class="error">' +
						'<%=translate("Scan error!")%>' +
					'</span>'
			} else if (data && data != "wait") {
				periodic_get("stop")
				var s = '<tr style="background-color: #F5F5F5;"><td onmouseover="ShowHint(this, "<%=translate('Show if network is available')%>")" onmouseout="HideHint(this)"><%=translate("Status")%></td>'
				s += '<td onmouseover="ShowHint(this, "<%=translate('Network operator\\\'s name')%>")" onmouseout="HideHint(this)"><%=translate("Operator name")%></td>';
				position += 1;
				s += '<td onmouseover="ShowHint(this, "<%=translate('Shorter name of operator')%>")" onmouseout="HideHint(this)"><%=translate("Short name")%></td>';
				position += 1;
				s += '<td onmouseover="ShowHint(this, "<%=translate('Numeric name of operator')%>")" onmouseout="HideHint(this)"><%=translate("Numeric name")%></td>';
				position += 1;
				
				s += '<td onmouseover="ShowHint(this, "<%=translate('Type of access that network has')%>")" onmouseout="HideHint(this)"><%=translate("Network access type")%></td>';
				s += '<td onmouseover="ShowHint(this, "<%=translate('Choose to which network to connect')%>")" onmouseout="HideHint(this)"><%=translate("Connect")%></td> </tr>';
				
				if (data && data.length > 2) {
					legend.style.display = 'none';

					for (var i = 0; i < data.length - 2; i++) {
						if (i % 2 == 1) {
							s += '<tr style = "background-color: #F5F5F5;">';
						} else {
							s += '<tr>';
						}
						
						for (var n = 0; n < data[i].length; n++) {
							if (n == 0) {
								s += String.format('<td>%s</td>', status[data[i][n]]);
							} else if (n == position) {
								s += String.format('<td>%s', net_ac_type[data[i][n]]);
								for (var t=i+1; t < data.length - 2; t++) {
									if(data[i][position-1] == data[t][position-1]) {
										s += String.format('/%s', net_ac_type[data[t][position]]);
										data.splice(t,1);
										--t;
									}
								}
								s += '</td>';
							} else {
								s += String.format('<td>%s</td>', data[i][n]);
							}
						}
						s += String.format('<td><input class="cbi-button cbi-button-save" style="float:left;" type="button" onclick="insert_operator(%s)" value="<%=translate('Connect')%>"></td></tr>', data[i][position - 1]);
					}
					output.innerHTML = String.format('%s', s);
				} else {
					periodic_get("stop");
					legend.style.display = 'none';
					output.innerHTML = '<span class="error"><%=translate("No operators!")%></span>';
				}
			}
		})
	}

	function insert_operator(numeric) {
		hide_element("Manual")
		document.getElementById("connection_mode").value = "manual"
		document.getElementById("num_operator").value = numeric
		select_operator()
	}
</script>

<form method="post" action="<%=pcdata(luci.http.getenv("REQUEST_URI"))%>">
	<div class="cbi-map">
		<div id="message"></div>

		<div style="height: 20px;">
			<h2 style="width:49%; float:left;">
				<a id="content" name="content"><%=translate("Network Operators")%></a>
			</h2>

			<fieldset style="width:49%; float:right;" class="section" id="cbi-apply-system">
				<div class="applyChanges" id="applyConnection" style="display: none;">
					<span id="cbi-apply-system-status"><%=translate("Registering...")%></span>
					<img src="/luci-static/resources/icons/loading.gif" alt="Loading">
				</div>
			</fieldset>
		</div>

		<fieldset style="width:100%;">
			<legend><%=translate("Current SIM")%></legend>
			<table width="100%" class="cbi-section-table">
				<tr>
					<td width="50%">
						<span onmouseover="ShowHint(this, '<%=translate('ID of your GSM (Global System for Mobile communication) network carrier')%>')" onmouseout="HideHint(this)">
							<%=translate("Current operator")%>
						</span>
					</td>
					<td id="curoper"><%=operator%></td>
				</tr>
			</table>
			<div style="float: left;">
				<input type="button" id="scanBtn"  value="<%=translate('Scan for operators')%>" class="cbi-button cbi-button-apply" onclick=" periodic_get('start')" style="font-weight: normal; margin-right: 20px;"/>
			</div>
		</fieldset>
		<fieldset>
			<legend><%=translate("Settings")%></legend>
		</fieldset>
		<fieldset class="cbi-section" style="display:none">
			<legend id="diag-rc-legend"></legend>
			<table id="diag-rc-output"></table>
		</fieldset>
		<fieldset class="cbi-section">
			<div id="selection-form" class="cbi-value">
				<div class="cbi-value-field" style="margin: 0px;">
					<div style="float: left;margin-right: 10px;">
						<div class="cbi-section-node" id="cbi-operctl-general">
							<div class="cbi-value cbi-value-last" id="cbi-operctl-general-rescan">
								<label class="cbi-value-title" for="cbid.operctl.general.rescan" style="width: 120px;">
								<span onmouseover="ShowHint(this,'<%=translate('Select reconnect interval to the network operator (min) if modem is not able to connect to the operator')%>')" onmouseout="HideHint(this)">
									<%=translate("Reconnect interval :")%>
								</span>
								</label>
								<div class="cbi-value-field" style="margin-left: 130px;">
									<select class="cbi-input-select" id="cbid.operctl.general.rescan" name="cbid.operctl.general.rescan" size="1">
										<option id="cbi-operctl-general-rescan-0" value="0" <% if not interval or interval == '0' then %> selected = "selected" <% end %>>Immediately</option>
										<option id="cbi-operctl-general-rescan-1" value="1" <% if interval == '1' then %> selected = "selected" <% end %>>1 min</option>
										<option id="cbi-operctl-general-rescan-5" value="5" <% if interval == '5' then %> selected = "selected" <% end %>>5 min</option>
										<option id="cbi-operctl-general-rescan-10" value="10" <% if interval == '10' then %> selected = "selected" <% end %>>10 min</option>
										<option id="cbi-operctl-general-rescan-30" value="30" <% if interval == '30' then %> selected = "selected" <% end %>>30 min</option>
										<option id="cbi-operctl-general-rescan-60" value="60" <% if interval == '60' then %> selected = "selected" <% end %>>60 min</option>
										<option id="cbi-operctl-general-rescan-120" value="120" <% if interval == '120' then %> selected = "selected" <% end %>>120 min</option>
									</select>
								</div>
							</div>
						</div>
					</div>
					<div class="cbi-value-field" style="margin: 0px;">
						<div style="float: left; margin-top:8px">
								<span><%=translate('Connection mode :')%></span>
						</div>
					</div>
					<div style="float: left; margin-left: 10px; margin-right: 10px;">
						<select class="cbi-input-select" onchange="hide_element(this.value)" id="connection_mode"  size="1">
							<option id="auto_connection" value="<%=translate('auto')%>"
								<% if not numeric then %>selected = "selected"<% end %>>Auto
							</option>
							<option id="manual_auto_connection" value="<%=translate('manual/auto')%>"
								<% if numeric and mode == "Manual-Auto" then %>selected = "selected"<% end %>>Manual-Auto
							</option>
							<option id="manual_connection" value="<%=translate('manual')%>"
								<% if numeric and not mode then %>selected = "selected" <% end %>>Manual
							</option>
						</select>
					</div>
					<div id="manual_con" style="float: left; width: 330px; <% if numeric then %>display: inline;"<% else %>display: none;"<% end %>>
						<label class="cbi-value-title" style="float: none;" onmouseover="ShowHint(this, '<%=translate('Code of operator that you want to connect')%>')" onmouseout="HideHint(this)"><%=translate("Operator code")%></label>
						<input type="text" class="cbi-input-text" id="num_operator" style="width: 100px;" <%=ifattr(numeric, "value", numeric)%>>
						<input type="button" id="selectBtn" value="<%=translate('Select')%>" class="cbi-button cbi-button-apply" onclick="select_operator()">
					</div>
					
					<div id="auto_con" style="float: left; <% if not numeric then %>display: inline;"<% else %>display: none;"<% end %>>
						<input  type="button" id="selectBtn" value="<%=translate('Select')%>" class="cbi-button cbi-button-apply" onclick="select_operator()">
					</div>
				</div>
			</div>
			<br style="clear:both" />
			<br />
		</fieldset>
	</div>
</form>
<%+footer%>
